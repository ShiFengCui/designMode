package observer;

/**
 * @author cuishifeng
 * @date 2018-12-10
 */
public class 说明 {

    /**
     *  观察者模式
     *
     *  1. 触一发而动全身 发起连锁反应
     *
     *  2. 抽象目标  具体目标 ; 抽象观察者  具体观察者
     *
     *  3. 抽象目标 - 有注册 解除 和 通知 观察者的抽象方法
     *     具体目标 - 保持一个观察者引用的集合
     *
     *     抽象观察者 - 有一个通知抽象方法 也就是调用观察者的方法
     *     具体观察者 - 实现抽象观察者的抽象方法
     *
     *  4. 优点和目标
     *      4.1 目标和观察者松耦合 当然也不能实现完全解耦
     *      4.2 具体目标只需关注自己的逻辑 而无需关注观察者的逻辑
     *          观察者和目标只需要专注自己
     *      4.3 被观察目标对象变化 会通知到注册的观察者 实现牵一发
     *          而动全身
     *
     *
     */
}
